1. find largest string using 1d array
#include<stdio.h>
#include<string.h>
char longest(char str[],int l)
{
    char arr[100];
    int i,v,count=0,max=0;
    for(i=0;i<=l;i++)
    {
        if(str[i]!=32 && str[i]!='\0')
        {
            count++;
        }
        else{ 
        if(count>max)
        {
            max=count;
            v=i-max;
        }
        count=0;
        }
    }
    int j=0;
    for(int k=v;k<v+max;k++)
    {
        arr[j]=str[k];
        j++;
    }
    arr[j]='\0';
    printf("the longest string:%s and its length:%d",arr,max);
}
int main()
{
    char str[100];
    printf("enter the string:");
    fgets(str,100,stdin);
    int l=strlen(str);
    char (*fptr)(char[],int);
    fptr=&longest;
    fptr(str,l);
}
output:
the longest string:hemalatha
 and its length:10
 
 
 
 2.accessing and printing 2d array using double pointer
 #include<stdio.h>
#include<stdlib.h>
int main()
{
    int r,c,i,j;
    printf("enter no. of rows and columns:");
    scanf("%d %d",&r,&c);
      int **ptr=(int**)malloc(sizeof(int*)*r);
      for(i=0;i<r;i++)
      {
          *(ptr+i)=(int*)malloc(sizeof(int)*c);
      }
      printf("enter the matrix elements:");
      for(i=0;i<r;i++)
      {
          for(j=0;j<c;j++)
          {
              scanf("%d",*(ptr+i)+j);
          }
      }
      printf("the matrix elements :");
      printf("\n");
      for(i=0;i<r;i++)
      {
          for(j=0;j<c;j++)
          {
              printf("%d ",*(*(ptr+i)+j));
          }
          printf("\n");
      }
}
output:
enter no. of rows and columns:2 3
enter the matrix elements:1 2 3 4 5 6
the matrix elements :
1 2 3 
4 5 6 
